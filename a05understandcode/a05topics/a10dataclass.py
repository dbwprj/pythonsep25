from dataclasses import dataclass

"""
Python provides a decorator called @dataclass in the dataclasses module (introduced in Python 3.7) to simplify the creation of classes that are primarily used to store attributes.

Data classes automatically generate several special methods for you,
 including __init__, __repr__, __eq__, and __hash__ (among others).
  

"""


@dataclass
class Product:
    name: str
    price: float
    quantity: int

    def total_cost(self) -> float:
        return self.price * self.quantity

# Create instances of Product
product1 = Product(name="Widget", price=15.5, quantity=100)
product2 = Product(name="Gadget", price=25.0, quantity=200)

# Access attributes
print(product1)  # Automatically uses the __repr__ method generated by @dataclass
print(f"Total cost of {product1.name}: {product1.total_cost()}")

print(product2)
print(f"Total cost of {product2.name}: {product2.total_cost()}")

"""
Python provides a decorator called @dataclass in the dataclasses module (introduced in Python 3.7) to simplify the creation of classes that are primarily used to store attributes.

Data classes automatically generate several special methods for you,
 including __init__, __repr__, __eq__, and __hash__ (among others).
  

"""
